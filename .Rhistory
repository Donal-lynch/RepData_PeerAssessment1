library('dplyr')
library('RColorBrewer')
Activity <- read.csv ('activity.zip')
# remove NA Values
Activity <- Activity[!is.na(Activity$steps),]
# Add a column for the week day, as a factor
Activity <- mutate(Activity, Day = as.factor(weekdays(as.Date(date))))
library('dplyr')
library('RColorBrewer')
Activity <- read.csv ('activity.csv')
# remove NA Values
Activity <- Activity[!is.na(Activity$steps),]
# Add a column for the week day, as a factor
Activity <- mutate(Activity, Day = as.factor(weekdays(as.Date(date))))
y<-tapply(Activity$steps, Activity$Day, mean) %>%as.data.frame()
z<- c(y['Sunday',], y['Monday',], y['Tuesday',], y['Wednesday',], y['Thursday',], y['Friday',])
?length()
dim(Activity)
dim(Activity)[1]
barplot(z, col = brewer.pal(7, 'Pastel2'))
title(main = "Mean # of steps per day")
# remove NA Values
Activity <- Activity[!is.na(Activity$steps),]
y<-tapply(Activity$steps, Activity$Day, mean) %>%as.data.frame()
z<- c(y['Sunday',], y['Monday',], y['Tuesday',], y['Wednesday',], y['Thursday',], y['Friday',])
barplot(z, col = brewer.pal(7, 'Pastel2'))
title(main = "Variation of steps over the week", xlab = 'Mean number of steps')
z
library('dplyr')
library('RColorBrewer')
Activity <- read.csv ('activity.csv')
# Add a column for the week day, as a factor
Activity <- mutate(Activity, Day = as.factor(weekdays(as.Date(date))))
y<-tapply(Activity$steps, Activity$Day, mean) %>%as.data.frame()
z<- c(y['Sunday',], y['Monday',], y['Tuesday',], y['Wednesday',], y['Thursday',], y['Friday',])
# remove NA Values
Activity <- Activity[!is.na(Activity$steps),]
# Calculate the mean for each day
y<-tapply(Activity$steps, Activity$Day, mean) %>%as.data.frame()
yMean<- c(y['Sunday',], y['Monday',], y['Tuesday',], y['Wednesday',], y['Thursday',], y['Friday',])
# Plot a histogram of the data
barplot(yMean, col = brewer.pal(7, 'Pastel2'))
title(main = "Variation of steps over the week", ylab = 'Mean number of steps')
# Calculate the Medain in the same mannor
y<-tapply(Activity$steps, Activity$Day, mean) %>%as.data.frame()
yMed<- c(y['Sunday',], y['Monday',], y['Tuesday',], y['Wednesday',], y['Thursday',], y['Friday',])
Activity$date
Activity$interval%>%str
Activity$interval
Activity$interval%>%summmart
Activity$interval%>%summmary
Activity$interval%>%summary
Activity$interval%>%str()
Activity$interval%>%max
Activity$interval%>%head(10)
Activity$interval%>%head(30)
Activity$interval<-as.factor(Activity$interval)
Activity$interval%>%str()
Activity$interval<-as.factor(Activity$interval)
y<-tapply(Activity$steps, Activity$interval, mean) %>% as.data.frame()
y
dim(y)
row.names(y)
as.numeric(row.names(y))
Activity$interval<-as.factor(Activity$interval)
y<-tapply(Activity$steps, Activity$interval, mean) %>% as.data.frame()
plot(as.numeric(row.names(y)), y, type = 'l')
length(y)
length(y[,1])
Activity$interval<-as.factor(Activity$interval)
y<-tapply(Activity$steps, Activity$interval, mean) %>% as.data.frame()
plot(as.numeric(row.names(y[,1])), y, type = 'l')
Activity$interval<-as.factor(Activity$interval)
y<-tapply(Activity$steps, Activity$interval, mean) %>% as.data.frame()
plot(as.numeric(row.names(y)), y[,1], type = 'l')
?plot
Activity$interval<-as.factor(Activity$interval)
y<-tapply(Activity$steps, Activity$interval, mean) %>% as.data.frame()
plot(as.numeric(row.names(y)), y[,1], type = 'l', lwd = 2, xlab = 'time interval', ylab = 'mean number of steps')
Activity$interval<-as.factor(Activity$interval)
y<-tapply(Activity$steps, Activity$interval, mean) %>% as.data.frame()
plot(as.numeric(row.names(y)), y[,1], type = 'l', lwd = 1, xlab = 'time interval', ylab = 'mean number of steps')
Activity$interval<-as.factor(Activity$interval)
y<-tapply(Activity$steps, Activity$interval, mean) %>% as.data.frame()
plot(as.numeric(row.names(y)), y[,1], type = 'l', lwd = 1.5, xlab = 'time interval', ylab = 'mean number of steps')
?max
max(y)
pmax(y)
which.max(y)
which.max(y[,1])
y[835,1]
y[104,1]
length(y)
dim(y)
which.max(y[,1])
y[104,]
row.names(y[104,])
?index
??index
row.names[which.max(y[,1])]
which.max(y[,1])
which.max(y[,1])%>%dim
which.max(y[,1])%>%length
which.max(y[,1])%>%class
row.names(y)[which.max(y[,1])]
Activity$interval<-as.factor(Activity$interval)
y<-tapply(Activity$steps, Activity$interval, mean) %>% as.data.frame()
plot(as.numeric(row.names(y)), y[,1], type = 'l', lwd = 1.5, xlab = 'time interval', ylab = 'mean number of steps', col = 'blue')
setwd("~/Coursera/Johns Hopkins Data Science Specializition/5 Reproducible Research/Week2/RepData_PeerAssessment1")
?is.na
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
Activity%>%is.na()%>%sum
apply(Activity,2, mean)
?ap[ply]
?apply
apply(Activity,2, FUN = function (x) mean(is.na(x)))
source('~/.active-rstudio-document', echo=TRUE)
?sapply
source('~/.active-rstudio-document', echo=TRUE)
Activity$steps [Activity$Day == 'Monday' & Activity$interval == 105]
Activity$steps [Activity$Day == 'Monday' & Activity$interval == 1305]
Activity$steps [Activity$Day == 'Monday' & Activity$interval == 835]
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
Activity%>%complete.cases()
Activity[complete.cases(Activity)]
Activity[complete.cases(Activity),]
?table()
source('~/.active-rstudio-document', echo=TRUE)
Activity%>%is.na()%>%sum
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
Activity
complete.cases(TRUE)
complete.cases(FALSE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
which(is.na(Activity$steps))
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
which(is.na(Activity$steps))
Activity%>%head()
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
Activity%>%head()
Activity$steps%>%is.na()%>%mean
Activity%>%head(20)
Activity%>%head(50)
Activity%>%head(100)
?for
?for()
?for()
??for
()
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
Activity
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
?median
yMed
# remove NA Values
ActivityNoNa <- Activity[!is.na(Activity$steps),]
# Calculate the mean for each day
yMean <- tapply(ActivityNoNa$steps, ActivityNoNa$Day, mean) %>%as.data.frame()
yMean <- c(yMean['Sunday',], yMean['Monday',], yMean['Tuesday',], yMean['Wednesday',], yMean['Thursday',], yMean['Friday',])
# Plot a histogram of the data
barplot(yMean, col = brewer.pal(7, 'Pastel2'))
title(main = "Variation of steps over the week", ylab = 'Mean number of steps')
# Calculate the Medain in the same mannor
yMed<-tapply(ActivityNoNa$steps, ActivityNoNa$Day, median) %>%as.data.frame()
yMed<- c(yMed['Sunday',], yMed['Monday',], yMed['Tuesday',], yMed['Wednesday',], yMed['Thursday',], yMed['Friday',])
yMed
yMed<-tapply(ActivityNoNa$steps, ActivityNoNa$Day, median) %>%as.data.frame()
yMed
tapply(ActivityNoNa$steps, ActivityNoNa$Day, mean) %>%as.data.frame()
tapply(ActivityNoNa$steps, ActivityNoNa$Day, max) %>%as.data.frame()
tapply(ActivityNoNa$steps, ActivityNoNa$Day, median) %>%as.data.frame()
c(1,2,3,4,5)%>%median()
c(0,0,0,0,5)%>%median()
# Duplicating the dataset as a new dataset with imputed rtows is required by the  question
ActivityI <- Activity
# Looping throuh all NA rows to impute them, based on the same Time and Day
for (i in which(is.na(ActivityI$steps))){
d <- ActivityI$Day[i]
t <- ActivityI$interval[i]
ActivityI$steps[i] <- ActivityI$steps[ActivityI$Day == d & ActivityI$interval == t] %>%
mean(na.rm = TRUE) %>%
round(digits = 0)
}
# Calculate the mean for each day
yIMean <- tapply(ActivityI$steps, ActivityI$Day, mean) %>%as.data.frame()
yIMean <- c(yIMean['Sunday',], yIMean['Monday',], yIMean['Tuesday',], yIMean['Wednesday',], yIMean['Thursday',], yIMean['Friday',])
# Plot a histogram of the data
barplot(yIMean, col = brewer.pal(7, 'Pastel2'))
title(main = "Variation of steps over the week", ylab = 'Mean number of steps')
# Calculate the Medain in the same mannor
yIMed<-tapply(ActivityI$steps, ActivityI$Day, median) %>%as.data.frame()
yIMed<- c(yIMed['Sunday',], yIMed['Monday',], yIMed['Tuesday',], yIMed['Wednesday',], yIMed['Thursday',], yIMed['Friday',])
# Duplicating the dataset as a new dataset with imputed rtows is required by the  question
ActivityI <- Activity
# Looping throuh all NA rows to impute them, based on the same Time and Day
for (i in which(is.na(ActivityI$steps))){
d <- ActivityI$Day[i]
t <- ActivityI$interval[i]
ActivityI$steps[i] <- ActivityI$steps[ActivityI$Day == d & ActivityI$interval == t] %>%
mean(na.rm = TRUE) %>%
round(digits = 0)
}
# Calculate the mean for each day
yIMean <- tapply(ActivityI$steps, ActivityI$Day, mean) %>%as.data.frame()
yIMean <- c(yIMean['Sunday',], yIMean['Monday',], yIMean['Tuesday',], yIMean['Wednesday',], yIMean['Thursday',], yIMean['Friday',])
# Plot a histogram of the data
barplot(yIMean, col = brewer.pal(7, 'Pastel2'))
title(main = "Variation of steps over the week, with imputed missing values", ylab = 'Mean number of steps')
# Calculate the Medain in the same mannor
yIMed<-tapply(ActivityI$steps, ActivityI$Day, median) %>%as.data.frame()
yIMed<- c(yIMed['Sunday',], yIMed['Monday',], yIMed['Tuesday',], yIMed['Wednesday',], yIMed['Thursday',], yIMed['Friday',])
print(yMean)
print(yIMean)
print(yMean%>%round(1))
print(yIMean%>%round(1))
print(yMed%>%round(1))
print(yIMed%>%round(1))
library('dplyr')
library('RColorBrewer')
Activity <- read.csv ('activity.csv')
# Add a column for the week day, as a factor
Activity <- mutate(Activity, Day = as.factor(weekdays(as.Date(date))))
y<-tapply(Activity$steps, Activity$Day, mean) %>%as.data.frame()
z<- c(y['Sunday',], y['Monday',], y['Tuesday',], y['Wednesday',], y['Thursday',], y['Friday',])
# remove NA Values
ActivityNoNa <- Activity[!is.na(Activity$steps),]
# Calculate the mean for each day
yMean <- tapply(ActivityNoNa$steps, ActivityNoNa$Day, mean) %>%as.data.frame()
yMean <- c(yMean['Sunday',], yMean['Monday',], yMean['Tuesday',], yMean['Wednesday',], yMean['Thursday',], yMean['Friday',])
# Plot a histogram of the data
barplot(yMean, col = brewer.pal(7, 'Pastel2'))
title(main = "Variation of steps over the week", ylab = 'Mean number of steps')
# Calculate the Medain in the same mannor
yMed<-tapply(ActivityNoNa$steps, ActivityNoNa$Day, median) %>%as.data.frame()
yMed<- c(yMed['Sunday',], yMed['Monday',], yMed['Tuesday',], yMed['Wednesday',], yMed['Thursday',], yMed['Friday',])
print(yMean%>%round(1))
print(yMed%>%round(1))
ActivityNoNa$interval<-as.factor(ActivityNoNa$interval)
yDay<-tapply(ActivityNoNa$steps, ActivityNoNa$interval, mean) %>% as.data.frame()
plot(as.numeric(row.names(yDay)), y[,1], type = 'l', lwd = 1.5, xlab = 'time interval', ylab = 'mean number of steps', col = 'blue')
ActivityNoNa$interval<-as.factor(ActivityNoNa$interval)
yDay<-tapply(ActivityNoNa$steps, ActivityNoNa$interval, mean) %>% as.data.frame()
plot(as.numeric(row.names(yDay)), yDay[,1], type = 'l', lwd = 1.5, xlab = 'time interval', ylab = 'mean number of steps', col = 'blue')
print(yMed%>%round(1))
ActivityI$WEnd <- ifelse (ActivityI$Day %in% c('Saturday', 'Sunday'), )
ActivityI$Day %in% c('Saturday', 'Sunday')
ActivityI$Day
c('1', '2', '3')
c('1', '2', '3')  %in% c('1')
?%in%
c('1) %in% c('1', '2', '3')
c('1') %in% c('1', '2', '3')
ActivityI$Day %in% c('Saturday', 'Sunday')
'Saturday' %in% c('Saturday', 'Sunday')
?ifelse
ActivityI$Day %in% c('Saturday', 'Sunday')%>%lenght
ActivityI$Day %in% c('Saturday', 'Sunday')%>%length
ActivityI$Day %>%length
ActivityI$Day%>%as.character %in% c('Saturday', 'Sunday')%>%length
ActivityI$Day%>%as.character %in% c('Saturday', 'Sunday')
ActivityI$Day[1] %in% c('Saturday', 'Sunday')
ActivityI$Day[2] %in% c('Saturday', 'Sunday')
ActivityI$Day[3] %in% c('Saturday', 'Sunday')
ActivityI$Day[4] %in% c('Saturday', 'Sunday')
ActivityI$Day[5] %in% c('Saturday', 'Sunday')
ActivityI$Day[6] %in% c('Saturday', 'Sunday')
ActivityI$Day[7] %in% c('Saturday', 'Sunday')
ActivityI$Day[7]
ActivityI$Day[6]
ActivityI$Day[5]
ActivityI$Day %in% c('Saturday', 'Sunday')
ActivityI$Day %in% c('Saturday', 'Sunday')%>%sum
ActivityI$Day %in% c('Saturday', 'Sunday')%>%mean
2/7
ActivityI$WEnd <- ifelse (ActivityI$Day %in% c('Saturday', 'Sunday'), 'eekend', 'week')
ActivityI$WEnd <- ifelse (ActivityI$Day %in% c('Saturday', 'Sunday'), 'weekend', 'week')
Activity
ActivityI
ActivityI[1000:1020,]
ActivityI[2000:1020,]
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
ActivityI$WEnd <- ifelse (ActivityI$Day %in% c('Saturday', 'Sunday'), 'weekend', 'week')
WeekDay<-tapply(ActivityI$steps[ActivityI$WEnd == 'week'], ActivityNoNa$interval[ActivityI$WEnd == 'week'], mean) %>%
as.data.frame()
WeekEnd<-tapply(ActivityI$steps[ActivityI$WEnd == 'weekend'], ActivityNoNa$interval[ActivityI$WEnd == 'weekend'], mean) %>%
as.data.frame()
par(mfrow = c(2, 1))
plot(as.numeric(row.names(WeekDay)), WeekDay[,1], type = 'l', lwd = 1.5,
xlab = 'time interval', ylab = 'mean number of steps', col = 'blue')
plot(as.numeric(row.names(WeekEND)), WeekEnd[,1], type = 'l', lwd = 1.5,
xlab = 'time interval', ylab = 'mean number of steps', col = 'blue')
ActivityI$WEnd <- ifelse (ActivityI$Day %in% c('Saturday', 'Sunday'), 'weekend', 'week')
WeekDay<-tapply(ActivityI$steps[ActivityI$WEnd == 'week'], ActivityNoNa$interval[ActivityI$WEnd == 'week'], mean) %>%
as.data.frame()
WeekEnd<-tapply(ActivityI$steps[ActivityI$WEnd == 'weekend'], ActivityNoNa$interval[ActivityI$WEnd == 'weekend'], mean) %>%
as.data.frame()
par(mfrow = c(2, 1))
plot(as.numeric(row.names(WeekDay)), WeekDay[,1], type = 'l', lwd = 1.5,
xlab = 'time interval', ylab = 'mean number of steps', col = 'blue')
plot(as.numeric(row.names(WeekEnd)), WeekEnd[,1], type = 'l', lwd = 1.5,
xlab = 'time interval', ylab = 'mean number of steps', col = 'blue')
ActivityI$WEnd <- ifelse (ActivityI$Day %in% c('Saturday', 'Sunday'), 'weekend', 'week')
WeekDay<-tapply(ActivityI$steps[ActivityI$WEnd == 'week'], ActivityNoNa$interval[ActivityI$WEnd == 'week'], mean) %>%
as.data.frame()
WeekEnd<-tapply(ActivityI$steps[ActivityI$WEnd == 'weekend'], ActivityNoNa$interval[ActivityI$WEnd == 'weekend'], mean) %>%
as.data.frame()
par(mfrow = c(2, 1))
plot(as.numeric(row.names(WeekDay)), WeekDay[,1], type = 'l', lwd = 1.5,
xlab = 'time interval', ylab = 'mean number of steps', col = 'blue', main = 'asdfdsa')
plot(as.numeric(row.names(WeekEnd)), WeekEnd[,1], type = 'l', lwd = 1.5,
xlab = 'time interval', ylab = 'mean number of steps', col = 'blue')
ActivityI$WEnd <- ifelse (ActivityI$Day %in% c('Saturday', 'Sunday'), 'weekend', 'week')
WeekDay<-tapply(ActivityI$steps[ActivityI$WEnd == 'week'], ActivityNoNa$interval[ActivityI$WEnd == 'week'], mean) %>%
as.data.frame()
WeekEnd<-tapply(ActivityI$steps[ActivityI$WEnd == 'weekend'], ActivityNoNa$interval[ActivityI$WEnd == 'weekend'], mean) %>%
as.data.frame()
par(mfrow = c(2, 1))
plot(as.numeric(row.names(WeekDay)), WeekDay[,1], type = 'l', lwd = 1.5,
xlab = 'time interval', ylab = 'mean number of steps', col = 'blue',
main = 'Average Weekday Steps')
plot(as.numeric(row.names(WeekEnd)), WeekEnd[,1], type = 'l', lwd = 1.5,
xlab = 'time interval', ylab = 'mean number of steps', col = 'blue',
main = 'Average Weekend Steps'))
ActivityI$WEnd <- ifelse (ActivityI$Day %in% c('Saturday', 'Sunday'), 'weekend', 'week')
WeekDay<-tapply(ActivityI$steps[ActivityI$WEnd == 'week'], ActivityNoNa$interval[ActivityI$WEnd == 'week'], mean) %>%
as.data.frame()
WeekEnd<-tapply(ActivityI$steps[ActivityI$WEnd == 'weekend'], ActivityNoNa$interval[ActivityI$WEnd == 'weekend'], mean) %>%
as.data.frame()
par(mfrow = c(2, 1))
plot(as.numeric(row.names(WeekDay)), WeekDay[,1], type = 'l', lwd = 1.5,
xlab = 'time interval', ylab = 'mean number of steps', col = 'blue',
main = 'Average Weekday Steps')
plot(as.numeric(row.names(WeekEnd)), WeekEnd[,1], type = 'l', lwd = 1.5,
xlab = 'time interval', ylab = 'mean number of steps', col = 'blue',
main = 'Average Weekend Steps')
?plot
ActivityI$WEnd <- ifelse (ActivityI$Day %in% c('Saturday', 'Sunday'), 'weekend', 'week')
WeekDay<-tapply(ActivityI$steps[ActivityI$WEnd == 'week'], ActivityNoNa$interval[ActivityI$WEnd == 'week'], mean) %>%
as.data.frame()
WeekEnd<-tapply(ActivityI$steps[ActivityI$WEnd == 'weekend'], ActivityNoNa$interval[ActivityI$WEnd == 'weekend'], mean) %>%
as.data.frame()
rng <- range(WeekDay, WeekEnd)
par(mfrow = c(2, 1))
plot(as.numeric(row.names(WeekDay)), WeekDay[,1], type = 'l', lwd = 1.5,
xlab = 'time interval', ylab = 'mean number of steps', xlim = rng,
col = 'blue', main = 'Average Weekday Steps')
plot(as.numeric(row.names(WeekEnd)), WeekEnd[,1], type = 'l', lwd = 1.5,
xlab = 'time interval', ylab = 'mean number of steps', xlim = rng,
col = 'blue', main = 'Average Weekend Steps')
WeekDay
WeekDay%>%max
WeekDay%>%min
WeekEnd%>%min
WeekEnd%>%max
rng
ActivityI$WEnd <- ifelse (ActivityI$Day %in% c('Saturday', 'Sunday'), 'weekend', 'week')
WeekDay<-tapply(ActivityI$steps[ActivityI$WEnd == 'week'], ActivityNoNa$interval[ActivityI$WEnd == 'week'], mean) %>%
as.data.frame()
WeekEnd<-tapply(ActivityI$steps[ActivityI$WEnd == 'weekend'], ActivityNoNa$interval[ActivityI$WEnd == 'weekend'], mean) %>%
as.data.frame()
# rng <- range(WeekDay, WeekEnd)
rng<-c(0, 150)
par(mfrow = c(2, 1))
plot(as.numeric(row.names(WeekDay)), WeekDay[,1], type = 'l', lwd = 1.5,
xlab = 'time interval', ylab = 'mean number of steps', xlim = rng,
col = 'blue', main = 'Average Weekday Steps')
plot(as.numeric(row.names(WeekEnd)), WeekEnd[,1], type = 'l', lwd = 1.5,
xlab = 'time interval', ylab = 'mean number of steps', xlim = rng,
col = 'blue', main = 'Average Weekend Steps')
ActivityI$WEnd <- ifelse (ActivityI$Day %in% c('Saturday', 'Sunday'), 'weekend', 'week')
WeekDay<-tapply(ActivityI$steps[ActivityI$WEnd == 'week'], ActivityNoNa$interval[ActivityI$WEnd == 'week'], mean) %>%
as.data.frame()
WeekEnd<-tapply(ActivityI$steps[ActivityI$WEnd == 'weekend'], ActivityNoNa$interval[ActivityI$WEnd == 'weekend'], mean) %>%
as.data.frame()
rng <- range(WeekDay, WeekEnd)
par(mfrow = c(2, 1))
plot(as.numeric(row.names(WeekDay)), WeekDay[,1], type = 'l', lwd = 1.5,
xlab = 'time interval', ylab = 'mean number of steps', ylim = rng,
col = 'blue', main = 'Average Weekday Steps')
plot(as.numeric(row.names(WeekEnd)), WeekEnd[,1], type = 'l', lwd = 1.5,
xlab = 'time interval', ylab = 'mean number of steps', ylim = rng,
col = 'blue', main = 'Average Weekend Steps')
# remove NA Values
ActivityNoNa <- Activity[!is.na(Activity$steps),]
# Calculate the mean for each day
yMean <- tapply(ActivityNoNa$steps, ActivityNoNa$Day, mean) %>%as.data.frame()
yMean <- c(yMean['Sunday',], yMean['Monday',], yMean['Tuesday',], yMean['Wednesday',], yMean['Thursday',], yMean['Friday',], yMean ['Saturday',])
# Plot a histogram of the data
barplot(yMean, col = brewer.pal(7, 'Pastel2'))
title(main = "Variation of steps over the week", ylab = 'Mean number of steps')
# Calculate the Medain in the same mannor
yMed<-tapply(ActivityNoNa$steps, ActivityNoNa$Day, median) %>%as.data.frame()
yMed<- c(yMed['Sunday',], yMed['Monday',], yMed['Tuesday',], yMed['Wednesday',], yMed['Thursday',], yMed['Friday',], yMed['Saturday',])
print(yMean%>%round(1))
print(yMed%>%round(1))
